From beginners-return-93093-ktwarwic=speedy.uwaterloo.ca@perl.org  Thu Jul  5 12:47:58 2007
Return-Path: <beginners-return-93093-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l65GlvL9028723
	for <ktwarwic@flax9.uwaterloo.ca>; Thu, 5 Jul 2007 12:47:57 -0400
Received: (qmail 28140 invoked by uid 514); 5 Jul 2007 16:47:48 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 28131 invoked from network); 5 Jul 2007 16:47:47 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 5 Jul 2007 16:47:47 -0000
Received: (qmail 8681 invoked by uid 225); 5 Jul 2007 16:47:47 -0000
Delivered-To: beginners@perl.org
Received: (qmail 8676 invoked by alias); 5 Jul 2007 16:47:46 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_SIGNED,DKIM_VERIFIED,DK_POLICY_SIGNSOME,DK_SIGNED,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of tom.phoenix@gmail.com designates 64.233.184.224 as permitted sender)
Received: from wr-out-0506.google.com (HELO wr-out-0506.google.com) (64.233.184.224)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Thu, 05 Jul 2007 09:47:44 -0700
Received: by wr-out-0506.google.com with SMTP id q50so376557wrq
        for <beginners@perl.org>; Thu, 05 Jul 2007 09:47:40 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:sender:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references:x-google-sender-auth;
        b=CDwM1KJNTp8GD0WrpLtgZvB0Qi4V9Zd039ybxHsTuWCN2iMhlI8SSud/CEUXiijQJw7vF/y2FUUuqI5K+wynI2XOjulavIuoxGHlqj8iCOywsip5S6t0fU3bxZdZCnC6y3X6IVw68jNiBxSwDjby8bZfQyIcVmmr4KTfXUWk3qg=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:sender:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references:x-google-sender-auth;
        b=jINWsDfoMJHM83vHp1cer093QXMzHpPcX69+Rx5MCuCZ2/f7RsazP81LcsETl6nibA9iwQDK3NWM4I8f9TfXEP7soy3/H5E1c3bWB10hnUjriISMwvs73kUltBg32DXOM6RlUpMgcauj94rDJhykKB25xQVaTLLjuNXZ3RRgwlI=
Received: by 10.90.113.18 with SMTP id l18mr8047649agc.1183654060370;
        Thu, 05 Jul 2007 09:47:40 -0700 (PDT)
Received: by 10.90.116.2 with HTTP; Thu, 5 Jul 2007 09:47:40 -0700 (PDT)
Message-ID: <31086b240707050947w33d049fahd64c54aa26561822@mail.gmail.com>
Date: Thu, 5 Jul 2007 09:47:40 -0700
From: "Tom Phoenix" <tom@stonehenge.com>
Sender: tom.phoenix@gmail.com
To: Monty <dale.schmitz@offutt.af.mil>
Subject: Re: Snippet explanation please
Cc: beginners@perl.org
In-Reply-To: <1183646961.952903.131480@57g2000hsv.googlegroups.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <1183646961.952903.131480@57g2000hsv.googlegroups.com>
X-Google-Sender-Auth: d23204080364ce08

On 7/5/07, Monty <dale.schmitz@offutt.af.mil> wrote:

> I'm reading "Network Programming with Perl" by Lincoln Stein, and I've
> come across a snippet of code I'mnot quite following:
>
> open (WHOFH, "who |") or die "Can't open who: $!";
>
> While (<WHOFH>) {
>     next unless /^(\S+)/;
>     $who{$1}++;
> }

That should be "while", not "While"; you probably know that perl is
case-sensitive. But the rest of it looks like something Dr. Stein
might write.

> It's the 'next' line I'm unclear on.  I know that results: parse the
> first field from each output line of the 'who' command, but I'm
> wondering why this might have been done in this way.  It seems to me
> that the 'next' line states "get the next record unless the current
> one startes with a non-whitespace character".
>
> The UNIX 'who' command output lines always start with non-whitespace
> characters, as far as I can see.  It seems just as sensible to leave
> this line out.  Does anyone know additional value to doing this?

I believe Dr. Stein was using that line primarily to capture the
username at the beginning of the line, ensuring that the pattern match
succeeds. Another programmer might do that like this:

    unless (/^(\S+)/) {
      warn "unexpected data from 'who' command: '$_', continuing";
      next;
    }

This program makes noise where the other was silent, but only when it
encounters somebody's unusual (buggy?) who command. If it didn't have
the warning, it would be close to what's in the book.

> Also, the '$who{$1}++' lines has the same effect here as "awk '{ print
> $1 }'",

Well, yessss, that's true except that it's not. But I think you're
just talking about $1 here.

> and leads me to believe that $2, $3, etc. also exist, but that
> doesn't seem to be the case as I've tried printing those variables.
> How does the '$1' work in this case?

There's one memory variable for each pair of memory parentheses in the
last successful pattern match. This one has only one pair, so it has
only $1. The others, $2 and so on, are all undef. You can have $42 if
you have 42 pairs of memory parentheses in your pattern, but in that
case please don't ask me to help maintain your code. In any case, the
perlre manpage has the details.

In general, it's poor form to use $1 and friends except shortly after
a successful pattern match, so likewise it's poor form not to check
the result of the pattern match, even if you're sure it will succeed.

Hope this helps!

--Tom Phoenix
Stonehenge Perl Training

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


