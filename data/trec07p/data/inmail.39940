From baufv@btopenworld.com  Sat May 19 19:08:56 2007
Return-Path: <baufv@btopenworld.com>
Received: from plg2.math.uwaterloo.ca (plg2.math.uwaterloo.ca [129.97.186.80])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with ESMTP id l4JN8uqD031623
	for <theorize@flax9.uwaterloo.ca>; Sat, 19 May 2007 19:08:56 -0400
Received: from c-65-96-33-172.hsd1.ma.comcast.net (c-65-96-33-172.hsd1.ma.comcast.net [65.96.33.172])
	by plg2.math.uwaterloo.ca (8.13.8/8.13.8) with SMTP id l4JN8ori001854
	for <theorize@plg.uwaterloo.ca>; Sat, 19 May 2007 19:08:52 -0400 (EDT)
Received: from ccnn ([217.156.192.167])
	by c-65-96-33-172.hsd1.ma.comcast.net (8.13.5/8.13.5) with SMTP id l4JNAe4N034167;
	Sat, 19 May 2007 19:10:40 -0400
Message-ID: <000e01c79a6a$a6437c80$a7c09cd9@ccnn>
From: "Adkins R. Horatio" <baufv@btopenworld.com>
To: <theorize@plg.uwaterloo.ca>
Subject: If the class has a vtbl, the process goes something like the following.
Date: Sat, 19 May 2007 19:08:44 -0400
MIME-Version: 1.0
Content-Type: text/plain;
	format=flowed;
	charset="iso-8859-1";
	reply-type=original
Content-Transfer-Encoding: 7bit
X-Priority: 3
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook Express 6.00.2800.1409
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2800.1409
X-Miltered: at mailchk-w01 with ID 464F8382.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Virus-Scanned: ClamAV version 0.90.2, clamav-milter version 0.90.2 on localhost
X-Virus-Status: Clean
X-UUID: 69e63ab0-d707-458b-8a69-5105d0806f67

GPSI Announces Market Attack Into $1 Trillion Market!

Global Payment Solutions
Symbol: GPSI
Price: $0.03

GPSI announced its plans to address the huge influx of immigrant workers
into the US that need banking solutions that they otherwise would not
qualify for. This market is expected to represent over $1 Trillion
dollars to be managed by 2008. GPSI provides viable solutions to this
market. This is hot, read the news and watch for more Monday! Get on
GPSI first thing Monday!

The title comes from a JavaOne session we did last year, which in turn
comes from a phrase I like to use. Indirectly calling a virtual function
from a base class constructor. You can find a couple of simple, 
well-documented explanations out there that apply to problems easy to 
diagnose during postmortem debugging. It's supposed to be transactional
and occur only once. Some confusion comes from the fact that there are
many different ways of doing this, as opposed to the standard pattern
established for Ajax applications with XmlHttpRequest. This is ongoing
work.
Indirectly calling a virtual function from a base class destructor. I
don't think the tools today, especially prior to Matisse, made that any
easier.
Some of the really important things seem silly from an engineering
standpoint, but are important in making our deployment model more
approachable. x recognize that a base  class's constructor or destructor
can't possibly invoke a derived class's  member function. By contrast
browsers might look at all the links on the page and  pre-fetch them, or
pre-fetch the ones they think are most likely to be followed next.

