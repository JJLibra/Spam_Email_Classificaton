From beginners-return-93091-ktwarwic=speedy.uwaterloo.ca@perl.org  Thu Jul  5 12:28:57 2007
Return-Path: <beginners-return-93091-ktwarwic=speedy.uwaterloo.ca@perl.org>
Received: from lists.develooper.com (x6.develooper.com [63.251.223.186])
	by flax9.uwaterloo.ca (8.12.8/8.12.5) with SMTP id l65GSuL9028522
	for <ktwarwic@flax9.uwaterloo.ca>; Thu, 5 Jul 2007 12:28:57 -0400
Received: (qmail 16914 invoked by uid 514); 5 Jul 2007 16:28:46 -0000
Mailing-List: contact beginners-help@perl.org; run by ezmlm
Precedence: bulk
List-Post: <mailto:beginners@perl.org>
List-Help: <mailto:beginners-help@perl.org>
List-Unsubscribe: <mailto:beginners-unsubscribe@perl.org>
List-Subscribe: <mailto:beginners-subscribe@perl.org>
List-Id: <beginners.perl.org>
Delivered-To: mailing list beginners@perl.org
Received: (qmail 16905 invoked from network); 5 Jul 2007 16:28:46 -0000
Received: from x1a.develooper.com (HELO x1.develooper.com) (216.52.237.111)
  by lists.develooper.com with SMTP; 5 Jul 2007 16:28:46 -0000
Received: (qmail 29889 invoked by uid 225); 5 Jul 2007 16:28:46 -0000
Delivered-To: beginners@perl.org
Received: (qmail 29880 invoked by alias); 5 Jul 2007 16:28:45 -0000
X-Spam-Status: No, hits=-2.6 required=8.0
	tests=BAYES_00,DKIM_POLICY_SIGNSOME,DK_POLICY_SIGNSOME,SPF_PASS
X-Spam-Check-By: la.mx.develooper.com
Received-SPF: pass (x1.develooper.com: domain of krahnj@telus.net designates 204.209.205.52 as permitted sender)
Received: from mx01.telus.net (HELO defout.telus.net) (204.209.205.52)
    by la.mx.develooper.com (qpsmtpd/0.28) with ESMTP; Thu, 05 Jul 2007 09:28:43 -0700
Received: from priv-edmwaa06.telusplanet.net ([154.20.131.28])
          by priv-edmwes50.telusplanet.net
          (InterMail vM.7.08.02.00 201-2186-121-20061213) with ESMTP
          id <20070705162836.WRRX27748.priv-edmwes50.telusplanet.net@priv-edmwaa06.telusplanet.net>
          for <beginners@perl.org>; Thu, 5 Jul 2007 10:28:36 -0600
Received: from [154.20.131.28] (d154-20-131-28.bchsia.telus.net [154.20.131.28])
	by priv-edmwaa06.telusplanet.net (BorderWare MXtreme Infinity Mail Firewall) with ESMTP id 2213XBEKLA
	for <beginners@perl.org>; Thu,  5 Jul 2007 10:28:36 -0600 (MDT)
Message-ID: <468D1C33.1090004@telus.net>
Date: Thu, 05 Jul 2007 09:28:35 -0700
From: "John W. Krahn" <krahnj@telus.net>
User-Agent: Thunderbird 1.5.0.12 (X11/20070604)
MIME-Version: 1.0
To: Perl beginners <beginners@perl.org>
Subject: Re: Snippet explanation please
References: <1183646961.952903.131480@57g2000hsv.googlegroups.com>
In-Reply-To: <1183646961.952903.131480@57g2000hsv.googlegroups.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit

Monty wrote:
> I'm reading "Network Programming with Perl" by Lincoln Stein, and I've
> come across a snippet of code I'mnot quite following:
> 
> open (WHOFH, "who |") or die "Can't open who: $!";
> 
> While (<WHOFH>) {

'While' is an error.  What the code probably said was 'while' (Perl is case 
sensitive.)

This reads each "line" from the file/pipe where "line" is defined by the Input 
Record Separator $/ and the current "line" is stored in the $_ variable.

>     next unless /^(\S+)/;

The current line is matched against the regular expression /^(\S+)/ which says 
that the beginning of the line must start with one or more non-whitespace 
characters and those non-whitespace characters are captured by the parentheses 
into the $1 variable.  If the current line does not match the pattern the next 
loops back to the start and another line is obtained.


>     $who{$1}++;

If the pattern matched we get to this point where the captured string is used 
as the key of the %who hash and the value of that key is incremented.


> }
> 
> It's the 'next' line I'm unclear on.  I know that results: parse the
> first field from each output line of the 'who' command, but I'm
> wondering why this might have been done in this way.  It seems to me
> that the 'next' line states "get the next record unless the current
> one startes with a non-whitespace character".
> 
> The UNIX 'who' command output lines always start with non-whitespace
> characters, as far as I can see.  It seems just as sensible to leave
> this line out.  Does anyone know additional value to doing this?

You should never use the numeric variables like $1 unless you are sure that 
the pattern matched otherwise the value in $1 will be left over from a 
previous successful match so this ensures that $1 always has a valid value.


> Also, the '$who{$1}++' lines has the same effect here as "awk '{ print
> $1 }'",

In perl "awk '{ print $1 }'" would be written as "perl -lane'print $F[0]'"


> and leads me to believe that $2, $3, etc. also exist, but that
> doesn't seem to be the case as I've tried printing those variables.
> How does the '$1' work in this case?

perldoc perlre

You have to have sets of parentheses for each numeric variable.



John
-- 
Perl isn't a toolbox, but a small machine shop where you
can special-order certain sorts of tools at low cost and
in short order.                            -- Larry Wall

-- 
To unsubscribe, e-mail: beginners-unsubscribe@perl.org
For additional commands, e-mail: beginners-help@perl.org
http://learn.perl.org/


